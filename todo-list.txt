Next:
-perhaps add QD and QS (under a Quantities panel) and a part that
says "Shortage or Surplus?"; (update the below actions that affect these)
-remaining calculations/actions:
  -open, private economy
    -based on world price:
      -number of imports
      -location of "active supply"
  -closed, public economy
    -(excise) tax or subsidy on supply:
      -location of "active supply"
      -recalculate:
        -equilibrium
        -total revenue
        -welfare
      -calculate
        -tax revenue
        -deadweight loss
    -(excise) tax or subsidy on demand:
      -location of "active demand"
      -recalculate:
        -equilibrium
        -welfare
      -calculate
        -tax revenue
        -deadweight loss
    -price mechanism:
      -dashed line for where mechanism is
      -floor or ceiling:
        -recalculate (if equilibrium isn't reached):
          -mark that equilibrium isn't reached
          -total revenue
          -welfare
        -calculate
          -deadweight loss
  -open, public economy
    -tariff
      -recalculate:
        -welfare
      -calculate:
        -deadweight loss (in an unexpected area)
        -number of imports
        -tariff revenue
    -import quota
      -recalculate:
        -welfare
      -calculate:
        -deadweight loss (in an unexpected area)
        -number of imports (given)
        -tariff revenue N/A
-regarding inputs that change S or D
  -if D or S is changed (besides by the addition of a point),
  keep the original D and S, and somehow indicate
  the new D or new S; ideas on how:
    -different colors
  -change total revenue to use quantity demanded, not just equilibrium
  quantity
  -ideas regarding how to get the magnitude of the user's changes:
    -have a submit/update button
    -have a popup
    -have the user put it in the data read from file
-graph/input warnings/errors
  -if any calculation's integration goes past the final data point
  of the graph whose final data point's x-coordinate is lowest,
  then the graphs don't interact, and this should be said
-pick a way to get user's input to make the graph;
  -ideas regarding how to get the input:
    -have user paste them in certain format in text field
    -read from file, if possible with just JavaScript/jQuery
  -ideas regarding the input itself:
    -perhaps have it be specified there what is being graphed
    -get the maxes from the inputs
  -ideas regarding input-checking:
    -report error if no semi-colon where expected one

Eventually:
-use AngularJS to note errorneous text field inputs
  -e.g .price floor or ceiling has to matter

Considerable:
-look into AJAX, just in case it can help somehow
-allow graphing of firm or aggregate
  -could use AngularJS if possible
  -could change the fields shown (in response to what the user wants
  to graph) (perhaps with AJAX or PHP or ASP or something)
-when hover over some measurement (e.g. producer surplus), hi lite
(on a separate canvas in the stack) the regarded region
-can probably afford to lower number of Riemann rectangles
-option to save applied inputs and apply them later
-allow the panels to be in more than one column; see how it was done with
CSS in one of the card games
-using tables to more neatly present the calculated data
-see if is way to keep data in elements removed by ng-if
  -could use JavaScript/jQuery and, when ng-if creates an element,
  somehow react to the change to give the appropriate input fields
  their former values